name: Ore CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [1.8, 1.11, 1.17]

    env:
      PGPORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: postgres
      client-dir: ./oreClient

    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
          cache: 'yarn'
          cache-dependency-path: ${{env.client-dir}}/yarn.lock

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: sbt

      - name: Initialize postgres extensions
        env:
          PGPASSWORD: ${{ env.DB_PASSWORD }}
        run: |
          psql -h localhost -p ${{ env.PGPORT }} -U ${{ env.DB_USERNAME }} -c "CREATE EXTENSION pgcrypto;"
          psql -h localhost -p ${{ env.PGPORT }} -U ${{ env.DB_USERNAME }} -c "CREATE EXTENSION hstore;"

      - name: Copy config files
        run: |
          cp ore/conf/application.conf.template ore/conf/application.conf
          cp jobs/src/main/resources/application.conf.template jobs/src/main/resources/application.conf
          cp oreClient/src/main/assets/config.json5.template oreClient/src/main/assets/config.json5

      - name: Run compile
        run: sbt "oreAll/compile;ore/test;ore/assets"

  lintClient:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [14, 16]

    env:
      client-dir: ./oreClient

    name: Client Linting (Node ${{ matrix.node }})
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
          cache-dependency-path: ${{env.client-dir}}/yarn.lock

      - name: Install dependencies
        run: yarn install
        working-directory: ${{env.client-dir}}

      - name: Run linting
        run: yarn run lint
        working-directory: ${{env.client-dir}}
